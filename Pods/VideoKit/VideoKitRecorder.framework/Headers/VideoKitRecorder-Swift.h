// Generated by Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
#ifndef VIDEOKITRECORDER_SWIFT_H
#define VIDEOKITRECORDER_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AVFoundation;
@import CoreGraphics;
@import CoreMedia;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="VideoKitRecorder",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif














@class NSCoder;

SWIFT_CLASS("_TtC16VideoKitRecorder19VKAssetTimeSelector")
@interface VKAssetTimeSelector : UIView <UIScrollViewDelegate>
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class AVCaptureSession;

SWIFT_CLASS("_TtC16VideoKitRecorder26VKCaptureVideoPreviewLayer")
@interface VKCaptureVideoPreviewLayer : AVCaptureVideoPreviewLayer
- (nonnull instancetype)initWithSession:(AVCaptureSession * _Nonnull)session OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithSessionWithNoConnection:(AVCaptureSession * _Nonnull)session OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=8.0);
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLayer:(id _Nonnull)layer OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16VideoKitRecorder10VKClipView")
@interface VKClipView : UIButton
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class VKCountdownTimerView;

SWIFT_PROTOCOL("_TtP16VideoKitRecorder24VKCountdownTimerDelegate_")
@protocol VKCountdownTimerDelegate
@optional
- (void)timerDidUpdateCounterValueWithSender:(VKCountdownTimerView * _Nonnull)sender newValue:(NSInteger)newValue;
- (void)timerDidStartWithSender:(VKCountdownTimerView * _Nonnull)sender;
- (void)timerDidPauseWithSender:(VKCountdownTimerView * _Nonnull)sender;
- (void)timerDidResumeWithSender:(VKCountdownTimerView * _Nonnull)sender;
- (void)timerDidEndWithSender:(VKCountdownTimerView * _Nonnull)sender elapsedTime:(NSTimeInterval)elapsedTime;
@end

@class UIColor;
@class UIFont;

SWIFT_CLASS("_TtC16VideoKitRecorder20VKCountdownTimerView")
@interface VKCountdownTimerView : UIView
@property (nonatomic) IBInspectable CGFloat lineWidth;
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull lineColor;
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull trailLineColor;
@property (nonatomic) IBInspectable BOOL isLabelHidden;
@property (nonatomic, strong) IBInspectable UIFont * _Nullable labelFont;
@property (nonatomic, strong) IBInspectable UIColor * _Nullable labelTextColor;
@property (nonatomic, copy) IBInspectable NSString * _Nullable timerFinishingText;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)drawRect:(CGRect)rect;
@end

@class NSBundle;

/// View Controller with a preview and video trimming capabilities
SWIFT_CLASS("_TtC16VideoKitRecorder22VKEditorViewController")
@interface VKEditorViewController : UIViewController
/// View did load
- (void)viewDidLoad;
/// View did disappear
- (void)viewDidDisappear:(BOOL)animated;
- (void)viewWillAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC16VideoKitRecorder20VKFocusIndicatorView")
@interface VKFocusIndicatorView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@class UICollectionView;
@class UICollectionViewCell;
@class UICollectionViewLayout;
@class UIScrollView;

/// Horizontal picker view. This is just a subclass of UIView, contains a UICollectionView.
SWIFT_CLASS("_TtC16VideoKitRecorder18VKHorizontalPicker")
@interface VKHorizontalPicker : UIView <UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
/// Readwrite. A color of the text on NOT selected cells.
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull textColor;
/// Readwrite. A color of the text on selected cells.
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull highlightedTextColor;
/// Readwrite. A float value which indicates the spacing between cells.
@property (nonatomic) IBInspectable CGFloat interitemSpacing;
/// Readwrite. A float value which determines the perspective representation which used when using VKHorizontalPickerStyle.Wheel style.
@property (nonatomic) IBInspectable CGFloat viewDepth;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (null_unspecified instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView * _Nonnull)collectionView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout minimumInteritemSpacingForSectionAtIndex:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout minimumLineSpacingForSectionAtIndex:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UIEdgeInsets)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout insetForSectionAtIndex:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDragging:(UIScrollView * _Nonnull)scrollView willDecelerate:(BOOL)decelerate;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
@end

@class UIImage;

/// Protocols to specify the number and type of contents.
SWIFT_PROTOCOL("_TtP16VideoKitRecorder28VKHorizontalPickerDataSource_")
@protocol VKHorizontalPickerDataSource
- (NSInteger)numberOfItemsInPickerView:(VKHorizontalPicker * _Nonnull)pickerView SWIFT_WARN_UNUSED_RESULT;
@optional
- (NSString * _Nonnull)pickerView:(VKHorizontalPicker * _Nonnull)pickerView titleForItem:(NSInteger)item SWIFT_WARN_UNUSED_RESULT;
- (UIImage * _Nonnull)pickerView:(VKHorizontalPicker * _Nonnull)pickerView imageForItem:(NSInteger)item SWIFT_WARN_UNUSED_RESULT;
@end

@class UILabel;

/// Protocols to specify the attitude when user selected an item,
/// and customize the appearance of labels.
SWIFT_PROTOCOL("_TtP16VideoKitRecorder26VKHorizontalPickerDelegate_")
@protocol VKHorizontalPickerDelegate <UIScrollViewDelegate>
@optional
- (void)pickerView:(VKHorizontalPicker * _Nonnull)pickerView didSelectItem:(NSInteger)item;
- (CGSize)pickerView:(VKHorizontalPicker * _Nonnull)pickerView marginForItem:(NSInteger)item SWIFT_WARN_UNUSED_RESULT;
- (void)pickerView:(VKHorizontalPicker * _Nonnull)pickerView configureLabel:(UILabel * _Nonnull)label forItem:(NSInteger)item;
@end


SWIFT_CLASS("_TtC16VideoKitRecorder13VKImagePicker")
@interface VKImagePicker : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface VKImagePicker (SWIFT_EXTENSION(VideoKitRecorder)) <UINavigationControllerDelegate>
@end

@class UIImagePickerController;

@interface VKImagePicker (SWIFT_EXTENSION(VideoKitRecorder)) <UIImagePickerControllerDelegate>
- (void)imagePickerControllerDidCancel:(UIImagePickerController * _Nonnull)picker;
- (void)imagePickerController:(UIImagePickerController * _Nonnull)picker didFinishPickingMediaWithInfo:(NSDictionary<UIImagePickerControllerInfoKey, id> * _Nonnull)info;
@end

@class UIGestureRecognizer;

SWIFT_CLASS("_TtC16VideoKitRecorder23VKRearrangableStackView")
@interface VKRearrangableStackView : UIStackView <UIGestureRecognizerDelegate>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)addArrangedSubview:(UIView * _Nonnull)view;
- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer * _Nonnull)gestureRecognizer SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_PROTOCOL("_TtP16VideoKitRecorder31VKRearrangableStackViewDelegate_")
@protocol VKRearrangableStackViewDelegate
@optional
/// called when a subview is “picked up” by the user
- (void)stackViewDidBeginReordering:(VKRearrangableStackView * _Nonnull)stackView;
/// Whenever a user drags a subview for a reordering, the delegate is told whether the direction
/// was forward (left/down) or backward (right/up), as well as what the max and min X or Y values are of the subview
- (void)stackView:(VKRearrangableStackView * _Nonnull)stackView didDragToReorderInForwardDirection:(BOOL)forward maxPoint:(CGPoint)maxPoint minPoint:(CGPoint)minPoint;
/// didReorderArrangedSubviews - called when reordering ends only if the selected subview’s index changed during reordering
- (void)stackViewDidReorderArrangedSubviews:(VKRearrangableStackView * _Nonnull)stackView reorderedView:(UIView * _Nonnull)reorderedView fromIndex:(NSInteger)fromIndex toIndex:(NSInteger)toIndex;
/// didEndReordering - called when reordering ends
- (void)stackViewDidEndReordering:(VKRearrangableStackView * _Nonnull)stackView;
/// called when reordering is cancelled
- (void)stackViewDidCancelReordering:(VKRearrangableStackView * _Nonnull)stackView;
/// Tells the ReorderableStackView whether or not the pressed subview may be picked up.
- (BOOL)stackView:(VKRearrangableStackView * _Nonnull)stackView canReorderSubview:(UIView * _Nonnull)subview atIndex:(NSInteger)index SWIFT_WARN_UNUSED_RESULT;
/// Tells the ReorderableStackView whether or not the held subview can take the spot at which is being held.
- (BOOL)stackView:(VKRearrangableStackView * _Nonnull)stackView shouldAllowSubview:(UIView * _Nonnull)subview toMoveToIndex:(NSInteger)index SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC16VideoKitRecorder15VKRearrangeView")
@interface VKRearrangeView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
@end



@interface VKRearrangeView (SWIFT_EXTENSION(VideoKitRecorder)) <VKRearrangableStackViewDelegate>
- (void)stackViewDidReorderArrangedSubviews:(VKRearrangableStackView * _Nonnull)stackView reorderedView:(UIView * _Nonnull)reorderedView fromIndex:(NSInteger)fromIndex toIndex:(NSInteger)toIndex;
@end


SWIFT_CLASS("_TtC16VideoKitRecorder14VKRecordButton")
@interface VKRecordButton : UIControl
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)didMoveToSuperview;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



/// VKRecorder, Video Capturing
SWIFT_CLASS("_TtC16VideoKitRecorder10VKRecorder")
@interface VKRecorder : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@class AVCaptureMetadataOutput;
@class AVMetadataObject;
@class AVCaptureConnection;

@interface VKRecorder (SWIFT_EXTENSION(VideoKitRecorder)) <AVCaptureMetadataOutputObjectsDelegate>
- (void)captureOutput:(AVCaptureMetadataOutput * _Nonnull)output didOutputMetadataObjects:(NSArray<AVMetadataObject *> * _Nonnull)metadataObjects fromConnection:(AVCaptureConnection * _Nonnull)connection;
@end

@class AVCaptureOutput;

@interface VKRecorder (SWIFT_EXTENSION(VideoKitRecorder)) <AVCaptureAudioDataOutputSampleBufferDelegate, AVCaptureVideoDataOutputSampleBufferDelegate>
- (void)captureOutput:(AVCaptureOutput * _Nonnull)captureOutput didOutputSampleBuffer:(CMSampleBufferRef _Nonnull)sampleBuffer fromConnection:(AVCaptureConnection * _Nonnull)connection;
@end






@class AVCaptureFileOutput;

@interface VKRecorder (SWIFT_EXTENSION(VideoKitRecorder)) <AVCaptureFileOutputRecordingDelegate>
- (void)captureOutput:(AVCaptureFileOutput * _Nonnull)output didStartRecordingToOutputFileAtURL:(NSURL * _Nonnull)fileURL fromConnections:(NSArray<AVCaptureConnection *> * _Nonnull)connections;
- (void)captureOutput:(AVCaptureFileOutput * _Nonnull)output didFinishRecordingToOutputFileAtURL:(NSURL * _Nonnull)outputFileURL fromConnections:(NSArray<AVCaptureConnection *> * _Nonnull)connections error:(NSError * _Nullable)error;
@end








@class AVCapturePhotoOutput;
@class AVCaptureResolvedPhotoSettings;
@class AVCaptureBracketedStillImageSettings;
@class AVCapturePhoto;

@interface VKRecorder (SWIFT_EXTENSION(VideoKitRecorder)) <AVCapturePhotoCaptureDelegate>
- (void)captureOutput:(AVCapturePhotoOutput * _Nonnull)captureOutput willCapturePhotoForResolvedSettings:(AVCaptureResolvedPhotoSettings * _Nonnull)resolvedSettings;
- (void)captureOutput:(AVCapturePhotoOutput * _Nonnull)output didCapturePhotoForResolvedSettings:(AVCaptureResolvedPhotoSettings * _Nonnull)resolvedSettings;
- (void)captureOutput:(AVCapturePhotoOutput * _Nonnull)captureOutput didFinishProcessingPhotoSampleBuffer:(CMSampleBufferRef _Nullable)photoSampleBuffer previewPhotoSampleBuffer:(CMSampleBufferRef _Nullable)previewPhotoSampleBuffer resolvedSettings:(AVCaptureResolvedPhotoSettings * _Nonnull)resolvedSettings bracketSettings:(AVCaptureBracketedStillImageSettings * _Nullable)bracketSettings error:(NSError * _Nullable)error;
- (void)captureOutput:(AVCapturePhotoOutput * _Nonnull)captureOutput didFinishProcessingRawPhotoSampleBuffer:(CMSampleBufferRef _Nullable)rawSampleBuffer previewPhotoSampleBuffer:(CMSampleBufferRef _Nullable)previewPhotoSampleBuffer resolvedSettings:(AVCaptureResolvedPhotoSettings * _Nonnull)resolvedSettings bracketSettings:(AVCaptureBracketedStillImageSettings * _Nullable)bracketSettings error:(NSError * _Nullable)error;
- (void)captureOutput:(AVCapturePhotoOutput * _Nonnull)captureOutput didFinishCaptureForResolvedSettings:(AVCaptureResolvedPhotoSettings * _Nonnull)resolvedSettings error:(NSError * _Nullable)error;
- (void)captureOutput:(AVCapturePhotoOutput * _Nonnull)output didFinishProcessingPhoto:(AVCapturePhoto * _Nonnull)photo error:(NSError * _Nullable)error;
@end





@interface VKRecorder (SWIFT_EXTENSION(VideoKitRecorder))
- (void)handleSessionWasInterrupted:(NSNotification * _Nonnull)notification;
- (void)handleSessionInterruptionEnded:(NSNotification * _Nonnull)notification;
@end



/// VKRecorderConfiguration, media capture configuration object
SWIFT_CLASS("_TtC16VideoKitRecorder23VKRecorderConfiguration")
@interface VKRecorderConfiguration : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// VKRecorderARConfiguration, augmented reality configuration object
SWIFT_CLASS("_TtC16VideoKitRecorder25VKRecorderARConfiguration")
@interface VKRecorderARConfiguration : VKRecorderConfiguration
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// VKRecorderAudioConfiguration, audio capture configuration object
SWIFT_CLASS("_TtC16VideoKitRecorder28VKRecorderAudioConfiguration")
@interface VKRecorderAudioConfiguration : VKRecorderConfiguration
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// VKRecorderClip, an object for managing a single media clip
SWIFT_CLASS("_TtC16VideoKitRecorder14VKRecorderClip")
@interface VKRecorderClip : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// VKRecorderPhotoConfiguration, photo capture configuration object
SWIFT_CLASS("_TtC16VideoKitRecorder28VKRecorderPhotoConfiguration")
@interface VKRecorderPhotoConfiguration : VKRecorderConfiguration
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// VKRecorderSession, a powerful object for managing and editing a set of recorded media clips.
SWIFT_CLASS("_TtC16VideoKitRecorder17VKRecorderSession")
@interface VKRecorderSession : NSObject
/// Initializer.
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end








/// VKRecorderVideoConfiguration, video capture configuration object
SWIFT_CLASS("_TtC16VideoKitRecorder28VKRecorderVideoConfiguration")
@interface VKRecorderVideoConfiguration : VKRecorderConfiguration
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Recorder View Controller.
SWIFT_CLASS("_TtC16VideoKitRecorder24VKRecorderViewController")
@interface VKRecorderViewController : UIViewController
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@interface VKRecorderViewController (SWIFT_EXTENSION(VideoKitRecorder)) <VKHorizontalPickerDelegate>
- (void)pickerView:(VKHorizontalPicker * _Nonnull)pickerView didSelectItem:(NSInteger)item;
@end




@interface VKRecorderViewController (SWIFT_EXTENSION(VideoKitRecorder)) <VKHorizontalPickerDataSource>
- (NSInteger)numberOfItemsInPickerView:(VKHorizontalPicker * _Nonnull)pickerView SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)pickerView:(VKHorizontalPicker * _Nonnull)pickerView titleForItem:(NSInteger)item SWIFT_WARN_UNUSED_RESULT;
@end



@interface VKRecorderViewController (SWIFT_EXTENSION(VideoKitRecorder)) <VKCountdownTimerDelegate>
- (void)timerDidStartWithSender:(VKCountdownTimerView * _Nonnull)sender;
- (void)timerDidEndWithSender:(VKCountdownTimerView * _Nonnull)sender elapsedTime:(NSTimeInterval)elapsedTime;
- (void)timerDidUpdateCounterValueWithSender:(VKCountdownTimerView * _Nonnull)sender newValue:(NSInteger)newValue;
@end


@interface VKRecorderViewController (SWIFT_EXTENSION(VideoKitRecorder))
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
@end






@interface VKRecorderViewController (SWIFT_EXTENSION(VideoKitRecorder))
- (void)selectFromCameraRoll;
@end


@class VKVideo;

@interface VKRecorderViewController (SWIFT_EXTENSION(VideoKitRecorder))
- (void)vkRecorderDidFinishUploadWhileRecording:(VKVideo * _Nonnull)video :(VKRecorderSession * _Nonnull)session;
- (void)vkRecorder:(VKRecorder * _Nonnull)vkRecorder didUpdateVideoConfiguration:(VKRecorderVideoConfiguration * _Nonnull)videoConfiguration;
- (void)vkRecorder:(VKRecorder * _Nonnull)vkRecorder didUpdateAudioConfiguration:(VKRecorderAudioConfiguration * _Nonnull)audioConfiguration;
- (void)vkRecorderSessionWillStart:(VKRecorder * _Nonnull)vkRecorder;
- (void)vkRecorderSessionDidStart:(VKRecorder * _Nonnull)vkRecorder;
- (void)vkRecorderSessionDidStop:(VKRecorder * _Nonnull)vkRecorder;
- (void)vkRecorderSessionWasInterrupted:(VKRecorder * _Nonnull)vkRecorder;
- (void)vkRecorderSessionInterruptionEnded:(VKRecorder * _Nonnull)vkRecorder;
- (void)vkRecorderCaptureModeWillChange:(VKRecorder * _Nonnull)vkRecorder;
- (void)vkRecorderCaptureModeDidChange:(VKRecorder * _Nonnull)vkRecorder;
@end


/// Struct defining a time picker element
SWIFT_CLASS("_TtC16VideoKitRecorder17VKRecordingLength")
@interface VKRecordingLength : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Recording progrerm -Rss view
SWIFT_CLASS("_TtC16VideoKitRecorder23VKRecordingProgressView")
@interface VKRecordingProgressView : UIProgressView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
@end


IB_DESIGNABLE
SWIFT_CLASS("_TtC16VideoKitRecorder13VKTrimmerView")
@interface VKTrimmerView : VKAssetTimeSelector
/// The background color of the main border of the view
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull borderColor;
/// The color of the handles on the side of the view
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull trimHandleColor;
/// The color of the handles on the side of the view when highlighted (is moving or has been trimmed)
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull trimHandleHighlightColor;
/// The color of the border/background for the handles when highlighted (is moving or has been trimmed)
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull trimBorderHighlightColor;
/// Border radius for controls
@property (nonatomic) IBInspectable CGFloat borderRadius;
/// The color of the position scroller
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull scrollerColor;
/// The color used to mask unselected parts of the video
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull maskColor;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDragging:(UIScrollView * _Nonnull)scrollView willDecelerate:(BOOL)decelerate;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// A view to preview a video inside an <code>AVPlayer</code>, with a scroll view to be able to select a specific area of the video.
/// Simply set the <code>asset</code> property to load you video inside the view, and use the <code>getImageCropFrame</code> method to retrieve the
/// selected frame of the video.
SWIFT_CLASS("_TtC16VideoKitRecorder15VKVideoCropView")
@interface VKVideoCropView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif
